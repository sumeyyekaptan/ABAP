*&---------------------------------------------------------------------*
*& Report  ZWM_R_PALET_ICERIK
*&
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*

REPORT ZWM_R_PALET_ICERIK.

TABLES:VEKP, VEPO, MARA, LTAP, KNA1, LIKP, ZWM_T_PICKING.
TYPE-POOLS: SLIS.
DATA: OK_CODE    LIKE SY-UCOMM,
      GR_ALV1    TYPE REF TO CL_GUI_ALV_GRID,
      GR_ALV2    TYPE REF TO CL_GUI_ALV_GRID,
      GR_ALV3    TYPE REF TO CL_GUI_ALV_GRID,
      GR_ALV4    TYPE REF TO CL_GUI_ALV_GRID,
      GS_VARIANT LIKE DISVARIANT,
      GR_CONT1   TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      GR_CONT2   TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      GR_CONT3   TYPE REF TO CL_GUI_CUSTOM_CONTAINER,
      GR_CONT4   TYPE REF TO CL_GUI_CUSTOM_CONTAINER.

DATA : FIELDCATALOG TYPE SLIS_T_FIELDCAT_ALV WITH HEADER LINE.

DATA: GT_FIELDCAT_1 TYPE LVC_T_FCAT,
      GT_FIELDCAT_2 TYPE LVC_T_FCAT,
      GT_FIELDCAT_3 TYPE LVC_T_FCAT,
      GT_FIELDCAT_4 TYPE LVC_T_FCAT,
      WA_FIELDCAT   TYPE LVC_S_FCAT,
      GD_TAB_GROUP  TYPE SLIS_T_SP_GROUP_ALV,
      GD_LAYOUT     TYPE LVC_S_LAYO,
      GD_REPID      LIKE SY-REPID.


DATA : PALET LIKE VEKP-EXIDV.
DATA : SAYAC1  TYPE I.
DATA : SAYAC2  TYPE I.
DATA : SAYAC3  TYPE I.
DATA : BEGIN OF GT_LIST1 OCCURS 0,
         MATNR       LIKE VEPO-MATNR,  "malzeme numarası
         COUNT_KUTU  LIKE VEPO-VEMNG,  "kutu sayısı
         TOTAL_KUTU  LIKE VEPO-VEMNG,  "toplam miktar
         BRGEW       LIKE MARA-BRGEW,  "tek bir malzemeye ait birim brut agirlik kg
         TOTAL_BRGEW LIKE VEKP-BRGEW,  "toplam kg
       END OF GT_LIST1.

DATA : BEGIN OF GT_LIST2 OCCURS 0 ,

         EXIDV  LIKE VEKP-EXIDV2,   "TAŞIMA BİRİMİ
         EXIDV2 LIKE VEKP-EXIDV,   "TAŞIMA BİRİMİ
         MATNR  LIKE MARA-MATNR,   "MALZEME
         VEMNG  LIKE VEPO-VEMNG,   "K.İÇ AD
         BRGEW  LIKE VEKP-BRGEW,   "kg
         AENAM  LIKE VEKP-AENAM,   "kullanıcı
         AEDAT  LIKE VEKP-AEDAT,   "okutulduğu tarih
         AEZET  LIKE VEKP-AEZET,   "okutulduğu saat

       END OF GT_LIST2.

DATA : BEGIN OF GT_LIST3 OCCURS 0,
         LGNUM  LIKE VEKP-LGNUM,   "DEPO KODU
         VPOBJ  TYPE STRING,
         STATUS TYPE STRING,
         PLT_NO LIKE VEKP-EXIDV,
         NLPLA  TYPE LTAP-NLPLA,
         BRGEW  LIKE VEKP-BRGEW,
         VHILM  LIKE VEKP-VHILM, "AMBALAJ MALZEMESİ
         MAKTX  LIKE MAKT-MAKTX,  "TANIMI
         SPRAS  LIKE MAKT-SPRAS,
         VBELN  LIKE LIKP-VBELN,

       END OF GT_LIST3.

DATA : BEGIN OF GT_LIST4 OCCURS 0 ,

         EXIDV      LIKE VEKP-EXIDV,  "TAŞIMA BİRİMİ
         MATNR      LIKE MARA-MATNR,  "MALZEME
         VEMNG      LIKE VEPO-VEMNG,  "K.İÇ AD
         BRGEW      LIKE VEKP-BRGEW,  "kg
         COUNT_KUTU LIKE VEPO-VEMNG,
       END OF GT_LIST4.

DATA : BEGIN OF GT_KNA1 OCCURS 0,
         NAME1 LIKE KNA1-NAME1,
         EXIDV LIKE VEKP-EXIDV,
         VBELN LIKE LIKP-VBELN,
       END OF GT_KNA1.

DATA : BEGIN OF GT_LTAP OCCURS 0,
         VLENR LIKE LTAP-VLENR,
         NLENR LIKE LTAP-NLENR,
         QNAME LIKE LTAP-QNAME,
         QDATU LIKE LTAP-QDATU,
       END OF GT_LTAP.

DATA : BEGIN OF GT_LQUA OCCURS 0,
         LGPLA LIKE LQUA-LGPLA,
         LENUM LIKE LQUA-LENUM,
       END OF GT_LQUA.

SELECTION-SCREEN BEGIN OF BLOCK BLK1.   "seçim kriterleri
PARAMETERS PALET_NO TYPE VEKP-EXIDV OBLIGATORY VALUE CHECK.
SELECTION-SCREEN END OF BLOCK BLK1.

"FORM TABLOLARI_DOLDUR .

"""""""""""""""""""""""""""""MALZEME BİLGİLERİ""""""""""""""""""""""""""""""

SELECT KTD~MATNR
       SUM( KTD~VEMNG )    AS TOTAL_KUTU
       COUNT(*)            AS COUNT_KUTU
       MAR~BRGEW AS TOTAL_BRGEW
  FROM VEKP AS PLT
INNER JOIN VEPO AS PLD ON PLT~VENUM = PLD~VENUM
INNER JOIN VEKP AS KTU ON PLD~UNVEL = KTU~VENUM
INNER JOIN VEPO AS KTD ON KTU~VENUM = KTD~VENUM
INNER JOIN MARA AS MAR ON KTD~MATNR = MAR~MATNR
  INTO CORRESPONDING FIELDS OF TABLE GT_LIST1
 WHERE PLT~EXIDV = PALET_NO OR PLT~EXIDV2 = PALET_NO
GROUP BY KTD~MATNR MAR~BRGEW
ORDER BY KTD~MATNR.

LOOP AT GT_LIST1.
  GT_LIST1-TOTAL_BRGEW =  GT_LIST1-TOTAL_BRGEW * GT_LIST1-TOTAL_KUTU.
  MODIFY GT_LIST1.
ENDLOOP.

LOOP AT GT_LIST1.
  SAYAC1 =  GT_LIST1-TOTAL_KUTU + SAYAC1.
  SAYAC2 =  GT_LIST1-COUNT_KUTU + SAYAC2.
  SAYAC3 =  GT_LIST1-TOTAL_BRGEW + SAYAC3.
ENDLOOP.

APPEND INITIAL LINE TO GT_LIST1.

LOOP AT GT_LIST1.
  IF GT_LIST1-MATNR = ''.
    GT_LIST1-MATNR = 'Toplam'.
    GT_LIST1-TOTAL_KUTU = SAYAC1.
    GT_LIST1-COUNT_KUTU = SAYAC2.
    GT_LIST1-TOTAL_BRGEW = SAYAC3.
    MODIFY GT_LIST1.
  ENDIF.

ENDLOOP.

"""""""""""""""""""""""""""""""

SELECT L~VLENR
       L~NLENR
       L~QNAME
       L~QDATU
  FROM LTAP AS L
  INTO CORRESPONDING FIELDS OF TABLE  GT_LTAP
 WHERE L~NLENR = PALET_NO.

""""""""""""""""""""""""""""""

"KUTU BİLGİLERİ

SELECT PLT~EXIDV AS EXIDV2
       KTU~EXIDV
       KTD~MATNR
       KTD~VEMNG
       MAR~BRGEW
       KTU~AENAM
       KTU~AEDAT
       KTU~AEZET
  FROM VEKP AS PLT
INNER JOIN VEPO AS PLD ON PLT~VENUM = PLD~VENUM
INNER JOIN VEKP AS KTU ON PLD~UNVEL = KTU~VENUM
INNER JOIN VEPO AS KTD ON KTU~VENUM = KTD~VENUM
INNER JOIN MARA AS MAR ON KTD~MATNR = MAR~MATNR
  INTO CORRESPONDING FIELDS OF TABLE GT_LIST2
 WHERE PLT~EXIDV = PALET_NO OR PLT~EXIDV2 = PALET_NO
ORDER BY KTD~MATNR KTU~EXIDV.

LOOP AT GT_LIST2.
  GT_LIST2-BRGEW = GT_LIST2-BRGEW * GT_LIST2-VEMNG.  "vlenr : ltap tablosunda Kaynak depo brm NLENR: HEDEF DEPO BRM
  IF GT_LIST2-EXIDV = GT_LTAP-VLENR.
    GT_LIST2-AENAM = GT_LTAP-QNAME.
    GT_LIST2-AEDAT = GT_LTAP-QDATU.
  ENDIF.
  MODIFY GT_LIST2.
ENDLOOP.

"""""""""""""""""""""""""

SELECT K~NAME1
       Z~EXIDV
       L~VBELN
  FROM LIKP          AS L
INNER JOIN ZWM_T_PICKING AS Z   ON Z~VBELN_VL = L~VBELN
INNER JOIN KNA1          AS K   ON K~KUNNR = L~KUNNR
  INTO CORRESPONDING FIELDS OF TABLE  GT_KNA1
 WHERE Z~EXIDV = PALET_NO
GROUP BY Z~EXIDV K~NAME1 L~VBELN.

""""""""""""""""""""""""""""""""

SELECT Q~LGPLA
       Q~LENUM
  FROM LQUA AS Q
  INTO CORRESPONDING FIELDS OF TABLE GT_LQUA
 WHERE Q~LENUM = PALET_NO
GROUP BY Q~LGPLA Q~LENUM.

"BAŞLIK LİSTESİ

SELECT V~EXIDV
       V~LGNUM
       V~STATUS
       V~VPOBJ
       V~BRGEW
       V~VHILM
       M~SPRAS
       M~MAKTX
  FROM VEKP AS V
INNER JOIN MAKT AS M ON V~VHILM = M~MATNR
  INTO CORRESPONDING FIELDS OF TABLE  GT_LIST3
 WHERE V~EXIDV = PALET_NO
   AND SPRAS = 'TR'
GROUP BY V~EXIDV V~LGNUM V~STATUS V~VPOBJ V~BRGEW
       V~VHILM M~SPRAS M~MAKTX. " L~NLPLA

LOOP AT GT_LIST3.

  GT_LIST3-PLT_NO = PALET_NO.

  SELECT SINGLE EXIDV FROM ZWM_T_PICKING INTO PALET
   WHERE EXIDV = PALET_NO.

  IF SY-SUBRC NE 0 .                         " bağımsız palet
    GT_LIST3-STATUS = 'BAĞIMSIZ'.
    GT_LIST3-VPOBJ = GT_LIST3-NLPLA.
    LOOP AT GT_LQUA.
      IF PALET_NO = GT_LQUA-LENUM.
        GT_LIST3-VPOBJ = GT_LQUA-LGPLA.
      ENDIF.
      MODIFY GT_LIST3.
    ENDLOOP.
  ELSE .
    READ TABLE GT_KNA1 WITH KEY EXIDV = GT_LIST3-PLT_NO.
    IF GT_LIST3-VPOBJ = '01' AND GT_LIST3-STATUS = '0020'.
      GT_LIST3-STATUS = 'MAL ÇIKIŞI YAPILMADI'.
      GT_LIST3-VPOBJ = GT_KNA1-NAME1.
      GT_LIST3-VBELN = GT_KNA1-VBELN.

    ELSEIF GT_LIST3-VPOBJ = '01' AND GT_LIST3-STATUS = '0050'.
      GT_LIST3-STATUS = 'MAL ÇIKIŞI YAPILDI'.
      GT_LIST3-VPOBJ = GT_KNA1-NAME1.
      GT_LIST3-VBELN = GT_KNA1-VBELN.

    ELSEIF GT_LIST3-VPOBJ = '12' AND GT_LIST3-STATUS = '0020'.
      GT_LIST3-STATUS = 'TESLİMATA YARI BAĞLI'.
      GT_LIST3-VPOBJ = GT_KNA1-NAME1.
      GT_LIST3-VBELN = GT_KNA1-VBELN.
    ENDIF.
  ENDIF.
  MODIFY GT_LIST3.
ENDLOOP.

""""""""""""""""""""""""""""""

"YAVRU PALETLER

SELECT PLT~EXIDV
       KTD~MATNR
       KTD~VEMNG
       MAR~BRGEW
       COUNT(*)    AS COUNT_KUTU
  FROM VEKP AS PLT
INNER JOIN VEPO AS PLD ON PLT~VENUM = PLD~VENUM
INNER JOIN VEKP AS KTU ON PLD~UNVEL = KTU~VENUM
INNER JOIN VEPO AS KTD ON KTU~VENUM = KTD~VENUM
INNER JOIN MARA AS MAR ON KTD~MATNR = MAR~MATNR
  INTO CORRESPONDING FIELDS OF TABLE GT_LIST4
 WHERE PLT~EXIDV2 = PALET_NO OR PLT~EXIDV = PALET_NO "YAVRU PALETLER
GROUP BY KTD~MATNR MAR~BRGEW PLT~EXIDV KTD~VEMNG
ORDER BY KTD~MATNR  PLT~EXIDV.

LOOP AT GT_LIST4.
  GT_LIST4-BRGEW =  GT_LIST4-BRGEW * GT_LIST4-VEMNG.
  MODIFY GT_LIST4.
ENDLOOP.


"ENDFORM.
*****************************************************************************************************

"FORM ALANKATALOGU_OLUSTUR .

DATA LV_COLPOS TYPE I .
  "** MAKRO ILE ALV YE ALAN EKLEME IŞLEMLERI YAPILACAK. BU YÜZDEN MAKRO TANIMLANIR.
  DEFINE ADD_FCTALOG_1 .

    WA_FIELDCAT-FIELDNAME   = &1 .
    WA_FIELDCAT-SCRTEXT_M   = &2.
    FIELDCATALOG-OUTPUTLEN   = 20.
    WA_FIELDCAT-COL_POS     = lv_colpos .
    lv_colpos = lv_colpos + 1 .
    APPEND WA_FIELDCAT TO GT_FIELDCAT_1.
    CLEAR  WA_FIELDCAT.
  END-OF-DEFINITION.
  DEFINE ADD_FCTALOG_2 .
    WA_FIELDCAT-FIELDNAME   = &1 .
    WA_FIELDCAT-SCRTEXT_M   = &2.
    FIELDCATALOG-OUTPUTLEN   = 20.
    WA_FIELDCAT-COL_POS     = lv_colpos .
    lv_colpos = lv_colpos + 1 .
    APPEND WA_FIELDCAT TO GT_FIELDCAT_2.
    CLEAR  WA_FIELDCAT.
  END-OF-DEFINITION.
  DEFINE ADD_FCTALOG_3 .
    WA_FIELDCAT-FIELDNAME   = &1 .
    WA_FIELDCAT-SCRTEXT_M   = &2.
    FIELDCATALOG-OUTPUTLEN   = 20.
    WA_FIELDCAT-COL_POS     = lv_colpos .
    lv_colpos = lv_colpos + 1 .
    APPEND WA_FIELDCAT TO GT_FIELDCAT_3.
    CLEAR  WA_FIELDCAT.
  END-OF-DEFINITION.
  DEFINE ADD_FCTALOG_4 .
    WA_FIELDCAT-FIELDNAME   = &1 .
    WA_FIELDCAT-SCRTEXT_M   = &2.
    FIELDCATALOG-OUTPUTLEN   = 20.
    WA_FIELDCAT-COL_POS     = lv_colpos .
    lv_colpos = lv_colpos + 1 .
    APPEND WA_FIELDCAT TO GT_FIELDCAT_4.
    CLEAR  WA_FIELDCAT.

  END-OF-DEFINITION.
  "** MAKRO ILE FIELD CATALOG YANI ALV DÜZENI OLUŞTURULUR.
  ADD_FCTALOG_1   'LGNUM'       'Depo Kodu' .
  ADD_FCTALOG_1   'STATUS'      'Durum'  .
  ADD_FCTALOG_1   'VPOBJ'       'Açıklama'  .
  ADD_FCTALOG_1   'PLT_NO'      'Palet No'  .
  ADD_FCTALOG_1   'BRGEW'       'Palet Ağırlığı'  .
  ADD_FCTALOG_1   'VHILM'       'Ambalaj Malzemesi' .
  ADD_FCTALOG_1   'MAKTX'       'Tanım'  .
  ADD_FCTALOG_1   'VBELN'       'Teslimat Numarası'  .


  ADD_FCTALOG_2   'MATNR'        'Malzeme Numarası' .
  ADD_FCTALOG_2   'COUNT_KUTU'   'Kutu Sayısı'  .
  ADD_FCTALOG_2   'TOTAL_KUTU'   'Toplam Miktar'  .
  ADD_FCTALOG_2   'TOTAL_BRGEW'  'Toplam Kg'  .


  ADD_FCTALOG_3   'EXIDV'        'Palet No' .
  ADD_FCTALOG_3   'MATNR'        'Malzeme Numarası'  .
  ADD_FCTALOG_3   'VEMNG'        'Kutu İçi Adet'  .
  ADD_FCTALOG_3   'BRGEW'        'Kg'  .
  ADD_FCTALOG_3   'COUNT_KUTU'   'Kutu Sayısı'  .


  ADD_FCTALOG_4   'EXIDV2'      'Palet No' .
  ADD_FCTALOG_4   'EXIDV'       'Kutu Numarası'  .
  ADD_FCTALOG_4   'MATNR'       'Malzeme Numarası'  .
  ADD_FCTALOG_4   'VEMNG'       'Kutu İçi Adet'  .
  ADD_FCTALOG_4   'BRGEW'       'Kg'  .
  ADD_FCTALOG_4   'AENAM'       'Kullanıcı' .
  ADD_FCTALOG_4   'AEDAT'       'Okutulduğu Tarih'  .
  ADD_FCTALOG_4   'AEZET'       'Okutulduğu Saat'  .


"ENDFORM. " ALANKATALOGU_OLUSTUR


CALL SCREEN 100.

MODULE STATUS_0100 OUTPUT.
  SET PF-STATUS '100'.
  SET TITLEBAR '100'.
  IF GR_CONT1 IS INITIAL.
    CREATE OBJECT GR_CONT1
      EXPORTING
        CONTAINER_NAME = 'CONT1'.                    "İlk container ismi
    CREATE OBJECT GR_ALV1
      EXPORTING
        I_PARENT = GR_CONT1.
    CALL METHOD GR_ALV1->SET_TABLE_FOR_FIRST_DISPLAY "ALV methodu
      EXPORTING
        I_SAVE                        = 'X'
        IS_VARIANT                    = GS_VARIANT
      CHANGING
        IT_OUTTAB                     = GT_LIST3[]   "öneri tablosu
        IT_FIELDCATALOG               = GT_FIELDCAT_1[]
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO "hata mesajı
      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CREATE OBJECT GR_CONT2
      EXPORTING
        CONTAINER_NAME = 'CONT2'.                       "İkinci container ismi
    CREATE OBJECT GR_ALV2
      EXPORTING
        I_PARENT = GR_CONT2.
    CALL METHOD GR_ALV2->SET_TABLE_FOR_FIRST_DISPLAY    "ALV methodu
      EXPORTING
        I_SAVE                        = 'X'
        IS_VARIANT                    = GS_VARIANT
      CHANGING
        IT_OUTTAB                     = GT_LIST1[]
        IT_FIELDCATALOG               = GT_FIELDCAT_2
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO "hata mesajı
      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CREATE OBJECT GR_CONT3
      EXPORTING
        CONTAINER_NAME = 'CONT3'.                       "İkinci container ismi
    CREATE OBJECT GR_ALV3
      EXPORTING
        I_PARENT = GR_CONT3.
    CALL METHOD GR_ALV3->SET_TABLE_FOR_FIRST_DISPLAY    "ALV methodu
      EXPORTING
        I_SAVE                        = 'X'
        IS_VARIANT                    = GS_VARIANT
      CHANGING
        IT_OUTTAB                     = GT_LIST4[]
        IT_FIELDCATALOG               = GT_FIELDCAT_3
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO "hata mesajı
      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

    CREATE OBJECT GR_CONT4
      EXPORTING
        CONTAINER_NAME = 'CONT4'.                       "İkinci container ismi
    CREATE OBJECT GR_ALV4
      EXPORTING
        I_PARENT = GR_CONT4.
    CALL METHOD GR_ALV4->SET_TABLE_FOR_FIRST_DISPLAY    "ALV methodu
      EXPORTING
        I_SAVE                        = 'X'
        IS_VARIANT                    = GS_VARIANT
      CHANGING
        IT_OUTTAB                     = GT_LIST2[]
        IT_FIELDCATALOG               = GT_FIELDCAT_4
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
      MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO "hata mesajı
      WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.

  ENDIF.
ENDMODULE.

MODULE USER_COMMAND_0100 INPUT.
  CASE OK_CODE.
    WHEN 'GERI' OR 'CIKIS' OR 'IPTAL'.
      LEAVE TO SCREEN 0.
  ENDCASE.
ENDMODULE.

"ENDFORM.
